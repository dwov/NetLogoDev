; File with the "to-go"- functionality of citizen-agents

; FILE HISTORY:

; 2024-01-29 Initial template, gks
; 
;
;---------------------------------------------------
;to citizen_behavior
  ;execute-intentions
       
;end



to citizen_behavior ;DETTA Ã„R TILL STATE MACHINEN YO d
;         
         ifelse steps > 0
        [ set steps steps - 1 ]
        [  
        run next-task]  
end


to walkaround     
  forward speed
  let places neighborhood with [not any? cops-here and region != "prison"]
    set inPrison?  false
    set color green
    if any? places [move-to one-of places]
    
  ifelse jailsentence > 0 [
    set next-task [ -> go-to-prison]
  ]
   [ let nearby-police other cops in-radius citizen-vision
    if any? nearby-police    [ 
     let police min-one-of nearby-police [distance myself]; identify the cop that is nearest
     if police != nobody [  
      set next-task [ -> see-police ]
     ] 
    ]
  ]
end


to see-police
  ifelse jailsentence > 0 [
    set next-task [ -> go-to-prison]
  ]
  
 [ let nearby-police other cops in-radius citizen-vision 
   let police min-one-of nearby-police [distance myself]; identify the cop that is nearest
   if police != nobody [
      print (word " citizen: " who " sees cop: " police)
      set heading (towards police) + 180 ; face opposite from the nearest police    
   ]     
  set next-task [ -> walkaround ]
  ]      
end


to go-to-prison
   move-to one-of patches with [not any? turtles-here and region = "prison"]
   set color red
   set inPrison?  true
   set jailtime jailtime + 1 ;counting the time in prison
   print (word "citizen " who " is in prison since: " jailtime)
   if jailtime > jailsentence [    ; released from prison
    set jailtime 0
    set jailsentence 0
    let places neighborhood with [not any? cops-here and region != "prison"]
    if any? places [move-to one-of places]
    set inPrison? false
    set color yellow
    print (word "citizen " who " is released from prison")
    set next-task [ -> walkaround ]
    ]    
end  

