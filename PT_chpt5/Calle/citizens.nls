; File with the "to-go"- functionality of citizen-agents

; FILE HISTORY:

; 2024-01-29 Initial template, gks
; 
;
;---------------------------------------------------


to citizen_behavior
    update_beliefs     
  
 ; if not member? "go-to-prison" intentions [
    ifelse empty? intentions [
     ifelse determined? = true [ 
      run choice ]   ;CHOOSE DIRECTION
   ; if police != nobody [execute-intentions]
    
    [ choose-direction ]
   ; ifelse any? nearby-police [execute-intentions]
  ]
  [ execute-intentions ] ; KÃ–R REACTIVE GREJEN
end

to choose-direction ;state 0
  set choice random(2)
  ifelse choice = 0 
  [ set determined? true
    set choice  [  -> go-to-expresso ]
    go-to-expresso ]
   [ set determined? true
    set choice  [  -> go-to-university ]
    go-to-university ]
  
end

to go-to-expresso ; state 1
  show (word "WALKING TO EXPRESSO HOUSE")
  let ExpressoHouse one-of patches with [ region = "ExpressoHouse" ]
  set heading towards ExpressoHouse 
  forward speed
  if patch-here = ExpressoHouse [
  show (word "ARRIVED, DRINKING SOME COFFEE") 
  set determined? false
  ]
 ; set next-task [ -> citizen_behavior ]
end
  
  to go-to-university ; state 2
    show (word "WALKING TO UNIVERSITY")
   let University one-of patches with [ region = "University" ]
   set heading towards University
   forward speed
   if patch-here = University [
  show (word "ARRIVED, JUST STUDYING A BIT ") 
  set determined? false
  ]
;  set next-task [ -> citizen_behavior ]
 
end

  
to walkaround     
  forward speed
  let places neighborhood with [not any? cops-here and region != "prison"]
    set inPrison?  false
    set color green
    if any? places [move-to one-of places]
    
  ifelse jailsentence > 0 [
  add-intention "go-to-prison" "true"
  ]
   [ let nearby-police other cops in-radius citizen-vision
    if any? nearby-police    [ 
     let police min-one-of nearby-police [distance myself]; identify the cop that is nearest
     if police != nobody [  
     add-intention "see-police" "true"
     ] 
    ]
  ]
end


to see-police
 ; ifelse jailsentence > 0 [
   ; add-intention "go-to-prison" "true"
  ;]
  
  let nearby-police other cops in-radius citizen-vision 
   let police min-one-of nearby-police [distance myself]; identify the cop that is nearest
   if police != nobody [
      print (word " citizen: " who " sees cop: " police)
   ;   face police
    
      set heading (towards police) + 180 ; face opposite from the nearest police    
    forward speed
  ]
 ; if jailsentence > 0 [
  ;    add-intention "go-to-prison" "true" ]
   ;   ifelse jailsentence <= 0 [ 
    ;  add-intention "walkaround" "true" ]
        
end


to go-to-prison
   move-to one-of patches with [not any? turtles-here and region = "prison"]
   set color red
   set inPrison?  true
   set jailtime jailtime + 1 ;counting the time in prison
   print (word "citizen " who " is in prison since: " jailtime)
   if jailtime > jailsentence [    ; released from prison
    set jailtime 0
    set jailsentence 0
    let places neighborhood with [not any? cops-here and region != "prison"]
    if any? places [move-to one-of places]
    set inPrison? false
    set color green
    print (word "citizen " who " is released from prison")
    
   ; add-intention "walkaround" "true"
    ]    
      
end  

  
to update_beliefs
      if jailsentence > 0 [add-intention "go-to-prison" "true"]
      let nearby-police other cops in-radius citizen-vision
  if any? nearby-police [add-intention "see-police" "true"]
end
; checking if the citizen is in prison
;ifelse inPrison? = true [
 ;;   set jailtime jailtime + 1 ;counting the time in prison
  ;;  print (word "citizen " who "is in prison since: " jailtime)
  ;;  if jailtime > jailsentence [; released from prison
  ;;    set jailtime 0
      ; move forward where there are no cops and is not prison
   ;;   let places neighborhood with [not any? cops-here and region != "prison"]
    ;;  if any? places [move-to one-of places]
   ;   set inPrison? false
  ;;    set color yellow
   ;;   print (word "citizen " who "is released from prison")
  ;  ]
  ;]
;  [;else checking if cops are within vision radius
   ;; let nearby-police other cops in-radius citizen-vision
   ;; if any? nearby-police [
   ;;   let police min-one-of nearby-police [distance myself]; identify the cop that is nearest
    ;;  if police != nobody [
     ;;   print (word " citizen: " who " sees cop: " police)
      ;;  set heading (towards police) + 180 ; face opposite from the nearest police
    ;  ] 
  ;  ]    
    ; move forward where there are no cops and is not prison
   ;; let places neighborhood with [not any? cops-here and region != "prison"]
  ;;  if any? places [move-to one-of places]
 ; ]



; if asked to go to prison  
;to gotoprison 
  ; set flag
 ; set inPrison? true
  ;;set color red
  ; move to prison into an own cell (=own patch)
 ;; move-to one-of patches with [not any? turtles-here and region = "prison"]
;end